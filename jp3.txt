#R program that includes different operators control structures,default arguments,returning complex 
v1<-c(1:5)
v2<-c(6:10)
cat("Addition of vectors:",v1+v2,"\n")
cat("Subtraction of vectors:",v1-v2,"\n")
cat("Multiplication of vectors:",v1*v2,"\n")
cat("Division of vectors:",v1/v2,"\n")
cat("Modulo  of vectors:",v1%%v2,"\n")
cat("Power operator :",v1^v2,"\n")

v3<-c(0,2)
v4<-c(T,F)
cat("Element wise AND:",v1&v2,"\n")
cat("Element wise OR:",v1|v2,"\n")
cat("Logical AND:",111&&111,"\n")
cat("Logical OR:",000||000,"\n")
cat("Negation:",v1)

#Control Structures
a<-3
mymunber<-4

#Stand alone if
if(a<=mynumber){
  a<-a^2
}

#Using if-else
if(a<=mynumber){
  cat("Condition was",a<=mynumber)
  a<-a^2
}else{
  cat("Condition was",a<=mynumber)
  a<-a-3.5 
}

#Nestingand Stacking
if(a<=mynumber){
  cat("First condition was TRUE\n")
  a<-a^2
  if(mynumber>3){
    cat("Second condition was TRUE")
    b<-seq(1,a,length=mynumber)
  }else{
    cat("Second condition was FALSE")
    b<-a*mynumber
  }
}else{
  cat("First condition was FALSE")
  a<-a-3.5
  if(mynumber>=4){
    cat("Second condition was TRUE")
    b<-a^(3-mynumber)
  }else{
    cat("Second condition was FALSE")
    b<-rep(a+mynumber,times=3)
  }
}
a
b

#Switch
mystring<-"thu"
samplestr<-switch(EXPR=mystring,mon=12,tue=34,wed=56,thu=78,fri=90,NA)
samplestr

#Default values for arguments
add<-function(a,b=10)
{
  print(a+b)
}
add(3)

#Returning complex objects
x1<-rep(rep(1:4)+1i*(4:1))
x1
is.complex(x1)